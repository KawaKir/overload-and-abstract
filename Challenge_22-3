package overload.challenge2;

public abstract class Account {

    protected AccountStatus accountStatus;
    public Client client;
    public String description;
    public double price;
    public String expirationDate;
    private Server server;

    public AccountStatus getAccountStatus() {
        return accountStatus;
    }

    public void setAccountStatus(AccountStatus accountStatus) {
        this.accountStatus = accountStatus;
    }

    public Server getServer() {
        return server;
    }

    public void setServer(Server server) {
        this.server = server;
    }

    public Client getClient() {
        return client;
    }

    public void setClient(Client client) {
        this.client = client;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getExpirationDate() {
        return expirationDate;
    }

    public void setExpirationDate(String expirationDate) {
        this.expirationDate = expirationDate;
    }
}
package overload.challenge2;

public class AccountPay extends Account {
    public AccountPay(AccountStatus accountStatus,Server market, String monthlyGroceries, double price, String expiryDate) { super(); }
    public AccountPay() {}
}
package overload.challenge2;

public class AccountReceive extends Account {
    public AccountReceive(AccountStatus accountStatus, Client telecom, String description, double value, String expiryDate) {
        super();
    }
}

package overload.challenge2;

public class AccountsReport {
    public void exhibitReport(Account[] accounts) {
        for (int i = 0; i < accounts.length; i++) {
            System.out.println(accounts[i].getAccountStatus() +", "+ accounts[i].getDescription() +", "+ accounts[i].getExpirationDate());
        }
    }
}

package overload.challenge2;

public enum AccountStatus {
    PAID, DUE, CANCELLED
}

package overload.challenge2;

public class Challenge1 {
    public static void main(String[] args) {

        Server constructionTeam = new Server();
        constructionTeam.setName("Malphas' Construction Co.");
        Server market = new Server();
        market.setName("Paimon's Traders");


        Client wholesale = new Client();
        wholesale.setName("Sharp Edge Butchery and Market");
        Client telecom = new Client();
        telecom.setName("Heaven's Signal Telecoms");

        AccountPay accountPay1 = new AccountPay();
        accountPay1.setAccountStatus(AccountStatus.DUE);
        accountPay1.setDescription("Due rent");
        accountPay1.setPrice(1230d);
        accountPay1.setExpirationDate("10/05/2012");
        accountPay1.setServer(constructionTeam);
        AccountPay accountPay2 = new AccountPay( AccountStatus.DUE , market, "Monthly groceries", 390d, "19/05/2012");


        AccountPay accountReceive1 = new AccountPay();
        accountReceive1.setAccountStatus(AccountStatus.DUE);
        accountReceive1.setDescription("logistics project in Java");
        accountReceive1.setPrice(89500d);
        accountReceive1.setExpirationDate("23/05/2012");
        accountReceive1.setClient(wholesale);
        AccountReceive accountReceive2 = new AccountReceive(AccountStatus.PAID, telecom, "Online Account Repairs.", 53200d, "13/05/2012");

        AccountsReport report = new AccountsReport();
        Account[] accounts = new Account[]{accountPay1, accountPay2, accountReceive1, accountReceive2};
        report.exhibitReport(accounts);
    }
}
package overload.challenge2;

public class Client extends Person {
}

package overload.challenge2;

public abstract class Person {
    public String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

package overload.challenge2;

public class Server extends Person {

}
